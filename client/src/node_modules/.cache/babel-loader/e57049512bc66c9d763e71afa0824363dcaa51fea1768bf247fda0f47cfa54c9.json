{"ast":null,"code":"export function timeObjInMins(time) {\n  const [hours, minutes] = time.split(':');\n  return hours * 60 + parseInt(minutes, 10);\n}\nexport function holidays(holidaysFrom, holidaysTo) {\n  const days = new Date(holidaysFrom);\n  const endDay = new Date(holidaysTo);\n  const holidayDays = [];\n  while (days <= endDay) {\n    holidayDays.push(new Date(days));\n    days.setDate(days.getDate() + 1);\n  }\n  return holidayDays;\n}\nexport function increaseKm(kmToRun, kmToIncrease, distanceRace, longDistance) {\n  if (kmToRun < Number(distanceRace)) {\n    kmToRun += kmToIncrease;\n  } else if (kmToRun >= Number(distanceRace) * 1.5 && Number(distanceRace) < 75) {\n    kmToRun += longDistance;\n  } else {\n    kmToRun = longDistance;\n  }\n}\nexport function kmsPerDay(dateRace, distanceRace, longDistance, daysOff, holidaysFrom, holidaysTo, trainingsDaysFilteredHolidays) {\n  const raceDay = new Date(dateRace);\n  const currentDay = new Date();\n  const daysUntilRaceArr = [];\n  while (currentDay <= raceDay) {\n    daysUntilRaceArr.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n  const kmToIncreaseIntTotal = distanceRace - longDistance;\n  const trainingsDaysFilteredDaysOff = daysUntilRaceArr.filter(day => !daysOff.includes(day.getDay().toString()));\n  if (holidaysFrom && holidaysTo) {\n    trainingsDaysFilteredHolidays = trainingsDaysFilteredDaysOff.filter(day => day < new Date(holidaysFrom) || day > new Date(holidaysTo));\n  } else {\n    trainingsDaysFilteredHolidays = trainingsDaysFilteredDaysOff;\n  }\n  const kmPerDay = kmToIncreaseIntTotal / trainingsDaysFilteredHolidays.length;\n  return kmPerDay;\n}","map":{"version":3,"names":["timeObjInMins","time","hours","minutes","split","parseInt","holidays","holidaysFrom","holidaysTo","days","Date","endDay","holidayDays","push","setDate","getDate","increaseKm","kmToRun","kmToIncrease","distanceRace","longDistance","Number","kmsPerDay","dateRace","daysOff","trainingsDaysFilteredHolidays","raceDay","currentDay","daysUntilRaceArr","kmToIncreaseIntTotal","trainingsDaysFilteredDaysOff","filter","day","includes","getDay","toString","kmPerDay","length"],"sources":["/Users/ineslozano/Sk-/client/src/functions.js"],"sourcesContent":["export function timeObjInMins(time) {\n  const [hours, minutes] = time.split(':');\n  return hours * 60 + parseInt(minutes, 10);\n}\n\nexport function holidays(holidaysFrom, holidaysTo) {\n  const days = new Date(holidaysFrom);\n  const endDay = new Date(holidaysTo)\n  const holidayDays = [];\n  while (days <= endDay) {\n    holidayDays.push(new Date(days));\n    days.setDate(days.getDate() + 1);\n  }\n  return holidayDays;\n}\n\nexport function increaseKm(kmToRun, kmToIncrease, distanceRace, longDistance) {\n  if (kmToRun < Number(distanceRace)) {\n    kmToRun += kmToIncrease;\n  } else if (kmToRun >= Number(distanceRace) * 1.5 && Number(distanceRace) < 75) {\n    kmToRun += longDistance;\n  } else {\n    kmToRun = longDistance;\n  }\n}\n\nexport function kmsPerDay(dateRace, distanceRace, longDistance, daysOff, holidaysFrom, holidaysTo, trainingsDaysFilteredHolidays) {\n  const raceDay = new Date(dateRace);\n  const currentDay = new Date();\n  const daysUntilRaceArr = [];\n\n  while (currentDay <= raceDay) {\n    daysUntilRaceArr.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n\n  const kmToIncreaseIntTotal = distanceRace - longDistance;\n  const trainingsDaysFilteredDaysOff = daysUntilRaceArr.filter((day) => !daysOff.includes(day.getDay().toString()));\n\n  if (holidaysFrom && holidaysTo) {\n    trainingsDaysFilteredHolidays = trainingsDaysFilteredDaysOff.filter((day) => day < new Date(holidaysFrom) || day > new Date(holidaysTo));\n  } else {\n    trainingsDaysFilteredHolidays = trainingsDaysFilteredDaysOff\n  }\n  const kmPerDay = kmToIncreaseIntTotal / trainingsDaysFilteredHolidays.length;\n  return kmPerDay;\n}"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,IAAI,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACxC,OAAOF,KAAK,GAAG,EAAE,GAAGG,QAAQ,CAACF,OAAO,EAAE,EAAE,CAAC;AAC3C;AAEA,OAAO,SAASG,QAAQA,CAACC,YAAY,EAAEC,UAAU,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,YAAY,CAAC;EACnC,MAAMI,MAAM,GAAG,IAAID,IAAI,CAACF,UAAU,CAAC;EACnC,MAAMI,WAAW,GAAG,EAAE;EACtB,OAAOH,IAAI,IAAIE,MAAM,EAAE;IACrBC,WAAW,CAACC,IAAI,CAAC,IAAIH,IAAI,CAACD,IAAI,CAAC,CAAC;IAChCA,IAAI,CAACK,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAClC;EACA,OAAOH,WAAW;AACpB;AAEA,OAAO,SAASI,UAAUA,CAACC,OAAO,EAAEC,YAAY,EAAEC,YAAY,EAAEC,YAAY,EAAE;EAC5E,IAAIH,OAAO,GAAGI,MAAM,CAACF,YAAY,CAAC,EAAE;IAClCF,OAAO,IAAIC,YAAY;EACzB,CAAC,MAAM,IAAID,OAAO,IAAII,MAAM,CAACF,YAAY,CAAC,GAAG,GAAG,IAAIE,MAAM,CAACF,YAAY,CAAC,GAAG,EAAE,EAAE;IAC7EF,OAAO,IAAIG,YAAY;EACzB,CAAC,MAAM;IACLH,OAAO,GAAGG,YAAY;EACxB;AACF;AAEA,OAAO,SAASE,SAASA,CAACC,QAAQ,EAAEJ,YAAY,EAAEC,YAAY,EAAEI,OAAO,EAAEjB,YAAY,EAAEC,UAAU,EAAEiB,6BAA6B,EAAE;EAChI,MAAMC,OAAO,GAAG,IAAIhB,IAAI,CAACa,QAAQ,CAAC;EAClC,MAAMI,UAAU,GAAG,IAAIjB,IAAI,CAAC,CAAC;EAC7B,MAAMkB,gBAAgB,GAAG,EAAE;EAE3B,OAAOD,UAAU,IAAID,OAAO,EAAE;IAC5BE,gBAAgB,CAACf,IAAI,CAAC,IAAIH,IAAI,CAACiB,UAAU,CAAC,CAAC;IAC3CA,UAAU,CAACb,OAAO,CAACa,UAAU,CAACZ,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9C;EAEA,MAAMc,oBAAoB,GAAGV,YAAY,GAAGC,YAAY;EACxD,MAAMU,4BAA4B,GAAGF,gBAAgB,CAACG,MAAM,CAAEC,GAAG,IAAK,CAACR,OAAO,CAACS,QAAQ,CAACD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEjH,IAAI5B,YAAY,IAAIC,UAAU,EAAE;IAC9BiB,6BAA6B,GAAGK,4BAA4B,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,GAAG,IAAItB,IAAI,CAACH,YAAY,CAAC,IAAIyB,GAAG,GAAG,IAAItB,IAAI,CAACF,UAAU,CAAC,CAAC;EAC1I,CAAC,MAAM;IACLiB,6BAA6B,GAAGK,4BAA4B;EAC9D;EACA,MAAMM,QAAQ,GAAGP,oBAAoB,GAAGJ,6BAA6B,CAACY,MAAM;EAC5E,OAAOD,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}